{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["marked","require","App","props","state","markdown","this","setState","Container","Grid","container","justify","style","marginTop","item","Typography","variant","textAlign","xs","TextareaAutosize","value","onChange","e","updateMarkdown","target","aria-label","placeholder","rows","backgroundColor","color","dangerouslySetInnerHTML","__html","height","width","margin","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAGIA,EAASC,EAAQ,IAGAC,E,kDACjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,SAAU,IAHA,E,kDAMlB,SAAeA,GACXC,KAAKC,SAAS,CAAEF,e,oBAGtB,WAAS,IAAD,OACN,OACI,eAACG,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,SAAUC,MAAO,CAACC,UAAW,OAAtD,SACI,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,cAACC,EAAA,EAAD,CAAYC,QAAS,KAArB,qCAGR,eAACP,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,SAAUC,MAAO,CAACC,UAAW,MAAOI,UAAW,UAAxE,UACI,cAACR,EAAA,EAAD,CAAMK,MAAI,EAACI,GAAI,EAAf,SACI,cAACH,EAAA,EAAD,CAAYC,QAAS,KAArB,8BAEJ,cAACP,EAAA,EAAD,CAAMK,MAAI,EAACI,GAAI,EAAf,SACI,cAACH,EAAA,EAAD,CAAYC,QAAS,KAArB,8BAGR,eAACP,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAO,CAACC,UAAW,MAAOI,UAAW,UAArD,UACI,cAACR,EAAA,EAAD,CAAMK,MAAI,EAACI,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CAAkBC,MAAOd,KAAKF,MAAMC,SAAUgB,SAAU,SAACC,GAAO,EAAKC,eAAeD,EAAEE,OAAOJ,QAAUK,aAAW,iBAAiBC,YAAY,QAAQC,KAAM,OAEjK,cAAClB,EAAA,EAAD,CAAMK,MAAI,EAACI,GAAI,EAAGN,MAAO,CAACgB,gBAAiB,UAAWC,MAAO,SAA7D,SACI,qBAAKC,wBAAyB,CAAEC,OAAQ/B,EAAOM,KAAKF,MAAMC,WAAaO,MAAO,CAAEoB,OAAQ,OAAQC,MAAO,MAAOC,OAAQ,sB,GAhCzGC,IAAMC,WCMxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.31c0a706.chunk.js","sourcesContent":["import React from 'react';\nimport {Grid, Typography, Container} from \"@material-ui/core\";\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nlet marked = require(\"marked\");\n\n\nexport default class App extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            markdown: \"\",\n        };\n    }\n    updateMarkdown(markdown) {\n        this.setState({ markdown });\n    }\n\n  render(){\n    return (\n        <Container>\n            <Grid container justify={\"center\"} style={{marginTop: \"2em\"}}>\n                <Grid item >\n                    <Typography variant={\"h2\"}>MarkDown Previewer!</Typography>\n                </Grid>\n            </Grid>\n            <Grid container justify={\"center\"} style={{marginTop: \"3em\", textAlign: \"center\"}}>\n                <Grid item xs={6}>\n                    <Typography variant={\"h5\"}>Markdown input</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography variant={\"h5\"}>HTML output</Typography>\n                </Grid>\n            </Grid>\n            <Grid container style={{marginTop: \"2em\", textAlign: \"center\"}}>\n                <Grid item xs={6}>\n                    <TextareaAutosize value={this.state.markdown} onChange={(e) => {this.updateMarkdown(e.target.value);}} aria-label=\"empty textarea\" placeholder=\"Input\" rows={15} />\n                </Grid>\n                <Grid item xs={6} style={{backgroundColor: \"#394F8A\", color: \"white\"}}>\n                    <div dangerouslySetInnerHTML={{ __html: marked(this.state.markdown) }} style={{ height: \"100%\", width: \"60%\", margin: \"auto\"}} />\n                </Grid>\n            </Grid>\n        </Container>\n    );}\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}